{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOjv6795GQ8AIs3YQkJqPgf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Part 1 – Implement Basic Data Structures using Numpy, Pandas"],"metadata":{"id":"woC5Y4ee1VIU"}},{"cell_type":"code","execution_count":10,"metadata":{"id":"Kt91xPuv0j9y","executionInfo":{"status":"ok","timestamp":1705637047056,"user_tz":-330,"elapsed":453,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["list1 = [1, 2, 3, 4, 5]\n","list2 = [6, 7, 8, 9, 10]"],"metadata":{"id":"W0SghwCf1uKa","executionInfo":{"status":"ok","timestamp":1705636255453,"user_tz":-330,"elapsed":416,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["print(\"Type of  the list1:\", type(list1))\n","result_addition = np.add(list1, list2)\n","result_multiplication = np.multiply(list1, list2)\n","result_division = np.divide(list2, list1)\n","result_poweroff = np.power(list1, list2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LWLjTV06198Y","executionInfo":{"status":"ok","timestamp":1705637055661,"user_tz":-330,"elapsed":515,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"43de9551-b669-40ca-da4e-963c152a9807"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Type of  the list1: <class 'list'>\n"]}]},{"cell_type":"code","source":["text_output = f\"Addition of Two Lists: {result_addition}\"\n","print(\"Result of addition:\", result_addition)\n","print(\"Result of multiplication:\", result_multiplication)\n","print(\"Result of division:\", result_division)\n","print(\"Result of poweroff:\", result_poweroff)\n","print(text_output)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rkmiUCuT3htg","executionInfo":{"status":"ok","timestamp":1705637058432,"user_tz":-330,"elapsed":621,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"4646a930-d589-461a-bd26-124d0d345d23"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Result of addition: [ 7  9 11 13 15]\n","Result of multiplication: [ 6 14 24 36 50]\n","Result of division: [6.         3.5        2.66666667 2.25       2.        ]\n","Result of poweroff: [      1     128    6561  262144 9765625]\n","Addition of Two Lists: [ 7  9 11 13 15]\n"]}]},{"cell_type":"code","source":["array1=np.array(list1)\n","array1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uDm7tF_O3xEO","executionInfo":{"status":"ok","timestamp":1705636961663,"user_tz":-330,"elapsed":503,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"31c05a87-b8e4-4c7e-c861-754a72365a92"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 4, 5])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["array2=np.array(list2)\n","array2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8IRuRd-f4h3q","executionInfo":{"status":"ok","timestamp":1705636963079,"user_tz":-330,"elapsed":11,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"6a1c3a72-0bf9-4bd9-e0a0-1c8208fb4e00"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 6,  7,  8,  9, 10])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#sin fun\n","print(\"sine:\",np.log(array1))\n","#logarithm\n","print(\"base-10\",np.log10(array1))\n","print(\"base-2\",np.log2(array1))\n","#exponential\n","print(\"exponential\",np.exp(array1))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vn6R3PG74qp8","executionInfo":{"status":"ok","timestamp":1705637348988,"user_tz":-330,"elapsed":773,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"ce541eee-3d3f-4c31-c28b-65ce784bf870"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["sine: [0.         0.69314718 1.09861229 1.38629436 1.60943791]\n","base-10 [0.         0.30103    0.47712125 0.60205999 0.69897   ]\n","base-2 [0.         1.         1.5849625  2.         2.32192809]\n","exponential [  2.71828183   7.3890561   20.08553692  54.59815003 148.4131591 ]\n"]}]},{"cell_type":"markdown","source":["Part 2 – Visualization of Data using matplotlib, pyplots Packages\n"],"metadata":{"id":"1kbeqZUL69iA"}},{"cell_type":"code","source":["people=['guna','AK','kanna','hari']\n","age=[21,23,34,52]\n","weight=[34,35,37,79]\n","height=[160,49,98,20]\n","\n"],"metadata":{"id":"HcU6zubU7C7c","executionInfo":{"status":"ok","timestamp":1705638255101,"user_tz":-330,"elapsed":5,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n"],"metadata":{"id":"8O25RGp-8FjN","executionInfo":{"status":"ok","timestamp":1705638257848,"user_tz":-330,"elapsed":4,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["plt.scatter(weight,height)\n","plt.title(\"relationship b/w weight and height of patient\")\n","plt.ylabel(\"height in meter\")\n","plt.xlabel(\"weight in kg's\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"VlmyZoKU8RgK","executionInfo":{"status":"ok","timestamp":1705638260375,"user_tz":-330,"elapsed":798,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"845464e6-e820-45e7-ed46-1af39685f2fd"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Using the generated dataset given above. Generate the following graphs and justify the\n","relationships among the vectors."],"metadata":{"id":"XhQEuDIW9yvT"}},{"cell_type":"code","source":["plt.figure(figsize=(12,4))\n","plt.title(\"people weight in kg's\",fontsize=16,fontstyle='italic')\n","plt.bar(x=people,height=weight,width=0.6,color='orange',edgecolor='k',alpha=0.6)\n","plt.xlabel(\"people\",fontsize=15)\n","plt.ylabel(\"weight in kg's\",fontsize=15)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":418},"id":"z8t0Z-Bc9pAZ","executionInfo":{"status":"ok","timestamp":1705638898106,"user_tz":-330,"elapsed":1503,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"2d36e4ed-3f5f-4b78-ed98-c8dcfcaf1953"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","plt.figure(figsize=(7,5))\n","plt.title(\"people weight in kg's\",fontsize=16,fontstyle='italic')\n","plt.hist(weight,color='red',edgecolor='k',alpha=0.6,bins=5)\n","plt.xlabel(\"people\",fontsize=15)\n","plt.ylabel(\"weight in kg's\",fontsize=15)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":495},"id":"vRblPQ9PAwt6","executionInfo":{"status":"ok","timestamp":1705639638394,"user_tz":-330,"elapsed":542,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"e26e5a7e-844f-462f-e516-aa39d4e16e16"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 700x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Part 3 – Access Data from Various Data Sources using builtin Func-\n","tion of Numpy, Pandas\n","1. Generate your own dataset using MS Excel and Notepad to prepare the dataset. Save\n","it in Google Drive and access it in Google Colab.\n","2. Upload the text file using tab seperated value(.tsv) and access the data from the file.\n","3. Upload the text file using comma seperated value(.csv) and access the data from file.\n","4. Access the excel file using .xlsx\n","5. Access the text from the URL\n","2\n"],"metadata":{"id":"aDbX3FZAC58x"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n"],"metadata":{"id":"xEwQALt4C9gh","executionInfo":{"status":"ok","timestamp":1705640331634,"user_tz":-330,"elapsed":531,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["df1=pd.read_table(\"lab01-text.txt\")\n","df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"6L2kiFUYETkJ","executionInfo":{"status":"error","timestamp":1705640337882,"user_tz":-330,"elapsed":515,"user":{"displayName":"2203 A52151","userId":"11088103649330384160"}},"outputId":"a1f7a54f-0c19-4a56-f137-4b5d225226b2"},"execution_count":27,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: 'lab01-text.txt'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-3482733f0928>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf1\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_table\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"lab01-text.txt\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mdf1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_table\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m   1287\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1288\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1289\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1290\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1291\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    604\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 605\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    606\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1440\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1442\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1443\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1444\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1733\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1735\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1736\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1737\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    854\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    855\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 856\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    857\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'lab01-text.txt'"]}]},{"cell_type":"code","source":["data2=pd.read_cvs(\"lab01-text.cvs\")\n","data2"],"metadata":{"id":"G1yd6nTnEoxV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data3=pd.read_excel(\"height_weight.xlsx\")\n","data3"],"metadata":{"id":"3hsPKomsE3Cq"},"execution_count":null,"outputs":[]}]}